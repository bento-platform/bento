# merges with main docker-compose.yml and various service-specific compose files;
# adds in development/debug environment variables, debugpy ports

services:
  web:
    environment:
      - NODE_ENV=development

  public:
    environment:
      - NODE_ENV=development
    ports:
      - "${BENTO_PUBLIC_EXTERNAL_PORT}:${BENTO_PUBLIC_INTERNAL_PORT}"
    profiles:
      - public

  gateway:
    environment:
      - BENTO_DEBUG=true
    # Override network aliases, adding BENTOV2_AUTH_DOMAIN
    # Other networks are inherited
    networks:
      aggregation-net:
        aliases:
          - ${BENTOV2_DOMAIN}
          - ${BENTOV2_PORTAL_DOMAIN}
          - ${BENTOV2_AUTH_DOMAIN}
      authz-net:
        aliases:
          - ${BENTOV2_DOMAIN}
          - ${BENTOV2_PORTAL_DOMAIN}
          - ${BENTOV2_AUTH_DOMAIN}
      beacon-net:
        aliases:
          - ${BENTOV2_DOMAIN}
          - ${BENTOV2_PORTAL_DOMAIN}
          - ${BENTOV2_AUTH_DOMAIN}
      drop-box-net:
        aliases:
          - ${BENTOV2_DOMAIN}
          - ${BENTOV2_PORTAL_DOMAIN}
          - ${BENTOV2_AUTH_DOMAIN}
          - ${BENTO_MINIO_DOMAIN}
      drs-net:
        aliases:
          - ${BENTOV2_DOMAIN}
          - ${BENTOV2_PORTAL_DOMAIN}
          - ${BENTOV2_AUTH_DOMAIN}
          - ${BENTO_MINIO_DOMAIN}
      event-relay-net:
        aliases:
          - ${BENTOV2_DOMAIN}
          - ${BENTOV2_PORTAL_DOMAIN}
          - ${BENTOV2_AUTH_DOMAIN}
      gohan-api-net:
        aliases:
          - ${BENTOV2_DOMAIN}
          - ${BENTOV2_PORTAL_DOMAIN}
          - ${BENTOV2_AUTH_DOMAIN}
      katsu-net:
        aliases:
          - ${BENTOV2_DOMAIN}
          - ${BENTOV2_PORTAL_DOMAIN}
          - ${BENTOV2_AUTH_DOMAIN}
      notification-net:
        aliases:
          - ${BENTOV2_DOMAIN}
          - ${BENTOV2_PORTAL_DOMAIN}
          - ${BENTOV2_AUTH_DOMAIN}
      monitoring-net:
        aliases:
          - ${BENTOV2_DOMAIN}
          - ${BENTOV2_PORTAL_DOMAIN}
          - ${BENTOV2_AUTH_DOMAIN}
      public-net:
        aliases:
          - ${BENTOV2_DOMAIN}
          - ${BENTOV2_PORTAL_DOMAIN}
          - ${BENTOV2_AUTH_DOMAIN}
      reference-net:
        aliases:
          - ${BENTOV2_DOMAIN}
          - ${BENTOV2_PORTAL_DOMAIN}
          - ${BENTOV2_AUTH_DOMAIN}
      service-registry-net:
        aliases:
          - ${BENTOV2_DOMAIN}
          - ${BENTOV2_PORTAL_DOMAIN}
          - ${BENTOV2_AUTH_DOMAIN}
      web-net:
        aliases:
          - ${BENTOV2_DOMAIN}
          - ${BENTOV2_PORTAL_DOMAIN}
          - ${BENTOV2_AUTH_DOMAIN}
      wes-net:
        aliases:
          - ${BENTOV2_DOMAIN}
          - ${BENTOV2_PORTAL_DOMAIN}
          - ${BENTOV2_AUTH_DOMAIN}

  auth:
    environment:
      # Allows hot reload of changes to theme
      - KC_SPI_THEME_STATIC_MAX_AGE=-1
      - KC_SPI_THEME_CACHE_THEMES=false
      - KC_SPI_THEME_CACHE_TEMPLATES=false

  authz:
    environment:
      - BENTO_DEBUG=True

  katsu:
    volumes:
      - ${BENTOV2_KATSU_DEV_WES_VOL_TMP_DIR}:/wes/tmp:ro
    environment:
      - BENTO_DEBUG=True
      - CHORD_DEBUG=True
      - DEBUGGER_PORT=${BENTOV2_KATSU_DEBUGGER_EXTERNAL_PORT}
    ports:
      - "${BENTOV2_KATSU_EXTERNAL_PORT}:${BENTOV2_KATSU_INTERNAL_PORT}"
      - "${BENTOV2_KATSU_DEBUGGER_EXTERNAL_PORT}:${BENTOV2_KATSU_DEBUGGER_INTERNAL_PORT}"

  katsu-db:
    ports:
      - "${BENTOV2_KATSU_DB_EXTERNAL_PORT}:${BENTOV2_KATSU_DB_INTERNAL_PORT}"
    volumes:
      - ${BENTOV2_KATSU_DB_DEV_VOL_DIR}:/var/lib/postgresql/data

  adminer:
    image: adminer:4.8.1
    container_name: ${BENTOV2_PREFIX}-adminer
    restart: unless-stopped
    networks:
      - authz-db-net
      - katsu-db-net
      - default
    ports:
      - 8080:8080

  elasticvue:
    image: cars10/elasticvue:0.44.0
    container_name: ${BENTOV2_PREFIX}-elasticvue
    restart: unless-stopped
    networks:
      - gohan-es-net
      - default
    ports:
      - 8081:8080

  aggregation:
    environment:
      - BENTO_DEBUG=True
      - CHORD_DEBUG=True
      - LOG_LEVEL=debug
      - PORT=${BENTOV2_AGGREGATION_INTERNAL_PORT}
      - DEBUGGER_PORT=${BENTOV2_AGGREGATION_DEBUGGER_INTERNAL_PORT}
    ports:
      - "${BENTOV2_AGGREGATION_EXTERNAL_PORT}:${BENTOV2_AGGREGATION_INTERNAL_PORT}"
      - "${BENTOV2_AGGREGATION_DEBUGGER_EXTERNAL_PORT}:${BENTOV2_AGGREGATION_DEBUGGER_INTERNAL_PORT}"

  wes:
    environment:
      - BENTO_DEBUG=True
      - CHORD_DEBUG=True
      - FLASK_DEBUG=True
      - BENTO_VALIDATE_SSL=False
      - DEBUGGER_PORT=${BENTOV2_WES_DEBUGGER_EXTERNAL_PORT}
    volumes:
      - ${BENTOV2_WES_DEV_VOL_DIR}:/wes/data
      - ${BENTOV2_WES_DEV_VOL_TMP_DIR}:/wes/tmp
      - ${BENTOV2_WES_DEV_DROP_BOX_VOL_DIR}:/data
    ports:
      - "${BENTOV2_WES_EXTERNAL_PORT}:${BENTOV2_WES_INTERNAL_PORT}"
      - "${BENTOV2_WES_DEBUGGER_EXTERNAL_PORT}:${BENTOV2_WES_DEBUGGER_INTERNAL_PORT}"

  drs:
    environment:
      - FLASK_DEBUG=True
      - DEBUGGER_PORT=${BENTOV2_DRS_DEBUGGER_EXTERNAL_PORT}
    ports:
      - "${BENTOV2_DRS_EXTERNAL_PORT}:5000"
      - "${BENTOV2_DRS_DEBUGGER_EXTERNAL_PORT}:${BENTOV2_DRS_DEBUGGER_INTERNAL_PORT}"

  beacon:
    environment:
      - FLASK_DEBUG=True
      - BENTO_DEBUG=True
      - CHORD_DEBUG=True
    ports:
      - "${BENTO_BEACON_EXTERNAL_PORT}:${BENTO_BEACON_INTERNAL_PORT}"
      - "${BENTO_BEACON_DEBUGGER_EXTERNAL_PORT}:${BENTO_BEACON_DEBUGGER_INTERNAL_PORT}"
    profiles:
      - beacon

  service-registry:
    environment:
      - BENTO_DEBUG=True
      - BENTO_VALIDATE_SSL=False
      - LOG_LEVEL=debug
    ports:
      - "${BENTOV2_SERVICE_REGISTRY_EXTERNAL_PORT}:${BENTOV2_SERVICE_REGISTRY_INTERNAL_PORT}"

  drop-box:
    environment:
      # Runtime
      - BENTO_DEBUG=True
    ports:
      - "${BENTOV2_DROP_BOX_EXTERNAL_PORT}:${BENTOV2_DROP_BOX_INTERNAL_PORT}"

  notification:
    environment:
      # Runtime
      - FLASK_DEBUG=True
      - BENTO_DEBUG=True
    ports:
      - "${BENTOV2_NOTIFICATION_EXTERNAL_PORT}:${BENTOV2_NOTIFICATION_INTERNAL_PORT}"
      - "${BENTO_NOTIFICATION_DEBUGGER_EXTERNAL_PORT}:${BENTO_NOTIFICATION_DEBUGGER_INTERNAL_PORT}"

  event-relay:
    environment:
      - BENTO_DEBUG=true
      - NODE_ENV=development

  reference:
    environment:
      - BENTO_DEBUG=True
      - BENTO_VALIDATE_SSL=False
      - LOG_LEVEL=debug
    ports:
      - "${BENTO_REFERENCE_EXTERNAL_PORT}:${BENTO_REFERENCE_INTERNAL_PORT}"

  reference-db:
    ports:
      - "${BENTO_REFERENCE_DB_EXTERNAL_PORT}:5432"

  gohan-api:
    environment:
      - BENTO_VALIDATE_SSL=False

  gohan-elasticsearch:
    # In dev / on Mac, sometimes this will trip up and decide there isn't enough disk space even when there is.
    # See https://stackoverflow.com/questions/48119189/elasticsearch-6-index-change-to-read-only-after-few-second
    environment:
      "cluster.routing.allocation.disk.threshold_enabled": "false"
      "http.cors.enabled": "true"
      "http.cors.allow-origin": "http://localhost:8081"
      "http.cors.allow-headers": X-Requested-With,Content-Type,Content-Length,Authorization

  cbioportal:
    ports:
      - "${BENTO_CBIOPORTAL_EXTERNAL_PORT}:${BENTO_CBIOPORTAL_INTERNAL_PORT}"

  grafana:
    ports:
      - "3000:3000"
    environment:
      # Workaround for self signed certificates in dev
      - GF_AUTH_GENERIC_OAUTH_TLS_SKIP_VERIFY_INSECURE=true

  loki:
    ports:
      - "3100:3100"
