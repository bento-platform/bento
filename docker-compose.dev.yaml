version: '3.7'

secrets:
  metadata-app-secret:
    file: $PWD/tmp/secrets/metadata-app-secret
  metadata-db-user:
    file: $PWD/tmp/secrets/metadata-db-user
  metadata-db-secret:
    file: $PWD/tmp/secrets/metadata-db-secret

services:
  web:
    build:
      args:
        BENTO_WEB_IS_DEBUG: "true"
        BENTO_WEB_USER: ${CURRENT_UID}
    volumes:
      - ./lib/web/bento_web:/web/bento_web
    # Execute npm build/install and watch, and 
    # nginx "listener" upon container startup
    entrypoint: sh /web/dev_startup.sh
    extends:
      file: docker-compose.yaml
      service: web

  variant:
    build:
      context: $PWD/lib/variant
      dockerfile: Dockerfile.dev
    extends:
      file: docker-compose.yaml
      service: variant
    command: >
      sh -c  "ls -lah &&
              cd bento_variant_service/bento_variant_service &&
              ls -lah &&
              flask run --host=0.0.0.0"
    volumes: 
      - ./lib/variant/bento_variant_service:/variant/bento_variant_service/bento_variant_service
      - ${BENTOV2_VARIANT_VOL_DIR}:${BENTOV2_VARIANT_DATA}
      - ${BENTOV2_DRS_PROD_VOL_DIR}:/drs/chord_drs/data

  gateway:
    # Override network aliases, adding BENTOV2_AUTH_DOMAIN
    networks: 
        bridge-net:
          aliases:
            - ${BENTOV2_DOMAIN}
            - ${BENTOV2_PORTAL_DOMAIN}
            - ${BENTOV2_AUTH_DOMAIN}
    extends:
      file: docker-compose.yaml
      service: gateway

  katsu:
    build:
      context: $PWD/lib/katsu
      dockerfile: Dockerfile.dev
    networks: 
      - bridge-net
    depends_on:
      - katsu-db
    extends:
      file: $PWD/lib/katsu/docker-compose.katsu.yaml
      service: katsu
    volumes: 
      - ./lib/katsu/katsu:/app/katsu
      - ${BENTOV2_KATSU_DEV_WES_VOL_TMP_DIR}:/wes/tmp
    environment:
      - CHORD_DEBUG="true"
    ports:
      - "${BENTOV2_KATSU_EXTERNAL_PORT}:${BENTOV2_KATSU_INTERNAL_PORT}"
    # TEMP: modify settings.py file to allow for domain host name to be allowed to make calls, as
    #       importing CHORD_URL doesn't work at the time of writing
    command: >
      sh -c 'sed -i "s/CHORD_HOST = urlparse(CHORD_URL or \"\").netloc/CHORD_HOST = \"${BENTOV2_PORTAL_DOMAIN}\"/" ${BENTOV2_KATSU_INTERNAL_PROJECT_DIRECTORY}/chord_metadata_service/metadata/settings.py && \
             sed -i "s/\[CHORD_HOST or \"localhost\"\]/\[CHORD_HOST or \"localhost:8000\"\]/" ${BENTOV2_KATSU_INTERNAL_PROJECT_DIRECTORY}/chord_metadata_service/metadata/settings.py'

  katsu-db:
    networks: 
      - bridge-net
    extends:
      file: $PWD/lib/katsu/docker-compose.katsu.yaml
      service: katsu-db

  federation:
    build:
      context: $PWD/lib/federation
      dockerfile: Dockerfile.dev
    environment: 
      - CHORD_DEBUG=${BENTOV2_FEDERATION_DEV_DEBUG}
    networks: 
      - bridge-net
    extends:
      file: $PWD/lib/federation/docker-compose.federation.yaml
      service: federation
    volumes: 
      - ./lib/federation/bento_federation_service:/federation/bento_federation_service
    ports:
      - "5000:5000"
    command: >
      sh -c "python run.py"

  wes:
    build:
      context: $PWD/lib/wes
      dockerfile: Dockerfile.dev
    networks: 
      - bridge-net
    environment:
      - CHORD_DEBUG=true
    extends:
      file: $PWD/lib/wes/docker-compose.wes.yaml
      service: wes
    volumes: 
      - ${BENTOV2_WES_DEV_VOL_DIR}:/wes/data
      - ${BENTOV2_WES_DEV_VOL_TMP_DIR}:/wes/tmp
      - ${BENTOV2_WES_DEV_DROP_BOX_VOL_DIR}:/data
    ports:
      - "5000:5000"
  
  drs:
    build:
      context: $PWD/lib/drs
      dockerfile: Dockerfile
    networks: 
      - bridge-net
    extends:
      file: $PWD/lib/drs/docker-compose.drs.yaml
      service: drs
    ports:
      - "${BENTOV2_DRS_EXTERNAL_PORT}:5000"
    volumes:
      # Override main drs data directory
      - ${BENTOV2_DRS_DEV_VOL_DIR}:/drs/chord_drs/data
      - ${BENTOV2_DRS_DEV_WES_VOL_DIR}:/wes/tmp
networks: 
  bridge-net:
    external: true