services:
  etl:
    image: ${BENTO_ETL_IMAGE}:${BENTO_ETL_VERSION}
    container_name: ${BENTO_ETL_CONTAINER_NAME}
    networks:
      - etl-net
      - etl-db-net
    expose:
      - ${BENTO_ETL_INTERNAL_PORT}
    depends_on:
      etl-db:
        condition: service_healthy
    environment:
      - BENTO_UID
      - BENTO_DEBUG=False
      - BENTO_AUTHZ_ENABLED=True
      - BENTO_AUTHZ_SERVICE_URL
      - CORS_ORIGINS=${BENTO_CORS_ORIGINS}
      - KATSU_URL=${BENTO_KATSU_URL}/
      - SERVICE_URL_BASE_PATH=${BENTOV2_PUBLIC_URL}/api/etl
      - BENTO_OPENID_CONFIG_URL
      - ETL_CLIENT_ID=${BENTO_ETL_CLIENT_ID}
      - ETL_CLIENT_SECRET=${BENTO_ETL_CLIENT_SECRET}
      - DATABASE_PATH=postgresql://${BENTO_ETL_DB_USER}:${BENTO_ETL_DB_PASSWORD}@${BENTO_ETL_DB_CONTAINER_NAME} #:${BENTO_ETL_DB_EXTERNAL_PORT}
      - DATABASE_NAME=${BENTO_ETL_DB_NAME}
    healthcheck:
      test: [ "CMD", "curl", "http://localhost:${BENTO_ETL_INTERNAL_PORT}" ]
      timeout: ${BENTO_HEALTHCHECK_TIMEOUT}
      interval: ${BENTO_HEALTHCHECK_INTERVAL}
      start_period: ${BENTO_HEALTHCHECK_START_PERIOD}
      start_interval: ${BENTO_HEALTHCHECK_START_INTERVAL}

  etl-db:
    image: ${BENTO_ETL_DB_IMAGE}:${BENTO_ETL_DB_VERSION}
    container_name: ${BENTO_ETL_DB_CONTAINER_NAME}
    environment:
      - POSTGRES_USER=${BENTO_ETL_DB_USER}
      - POSTGRES_PASSWORD=${BENTO_ETL_DB_PASSWORD}
      - POSTGRES_DB=${BENTO_ETL_DB_NAME}
    expose:
      - ${BENTO_ETL_DB_EXTERNAL_PORT}
    networks:
      - etl-db-net
    volumes:
      - ${BENTO_ETL_DB_VOL_DIR}:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "${BENTO_ETL_DB_NAME}", "-U", "${BENTO_ETL_DB_USER}" ]
      interval: ${BENTO_HEALTHCHECK_START_INTERVAL}
      timeout: ${BENTO_HEALTHCHECK_TIMEOUT}
      start_period: ${BENTO_HEALTHCHECK_START_PERIOD}
      start_interval: ${BENTO_HEALTHCHECK_START_INTERVAL}

networks:
  etl-net:
    external: true
    name: ${BENTO_ETL_NETWORK}
  etl-db-net:
    external: true
    name: ${BENTO_ETL_DB_NETWORK}