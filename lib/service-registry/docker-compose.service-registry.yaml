services:
  service-registry:
    image: ${BENTOV2_SERVICE_REGISTRY_IMAGE}:${BENTOV2_SERVICE_REGISTRY_VERSION}
    container_name: ${BENTOV2_SERVICE_REGISTRY_CONTAINER_NAME}
    environment:
      - BENTO_UID

      # Following the revised bento_services.json schema
      # (see Python typing in bento_service_registry)
      # A list of services on a single domain which are registered in the service
      # registry instance.
      - BENTO_SERVICES=/bento_services.json

      # Common URL base for all services
      - BENTO_URL=${BENTOV2_PORTAL_PUBLIC_URL}

      # Variables for generating service URLs from URL templates found in bento_services.json
      - BENTO_PUBLIC_URL=${BENTOV2_PUBLIC_URL}
      - BENTO_PORTAL_PUBLIC_URL=${BENTOV2_PORTAL_PUBLIC_URL}

      - BENTO_DEBUG=False
      - BENTO_VALIDATE_SSL=True
      - CORS_ORIGINS=${BENTO_CORS_ORIGINS}
      - BENTO_AUTHZ_SERVICE_URL

      # Timeout, in seconds (integers only), for contacting services from the JSON
      - CONTACT_TIMEOUT=10

      # Service ID for the /service-info endpoint
      - SERVICE_ID=ca.c3g.bento:${BENTOV2_SERVICE_REGISTRY_VERSION}

      - INTERNAL_PORT=${BENTOV2_SERVICE_REGISTRY_INTERNAL_PORT}
    networks:
      - service-registry-net
    expose:
      - ${BENTOV2_SERVICE_REGISTRY_INTERNAL_PORT}
    volumes:
      - ${PWD}/etc/bento_services.json:/bento_services.json:ro
    mem_limit: ${BENTOV2_SERVICE_REGISTRY_MEM_LIM} # for mem_limit to work, make sure docker-compose is v2.4
    cpus: ${BENTOV2_SERVICE_REGISTRY_CPUS}
    cpu_shares: 256
    healthcheck:
      test: [ "CMD", "curl", "http://localhost:${BENTOV2_SERVICE_REGISTRY_INTERNAL_PORT}/service-info" ]
      timeout: ${BENTO_HEALTHCHECK_TIMEOUT}
      interval: ${BENTO_HEALTHCHECK_INTERVAL}
      start_period: ${BENTO_HEALTHCHECK_START_PERIOD}
      start_interval: ${BENTO_HEALTHCHECK_START_INTERVAL}

networks:
  service-registry-net:
    external: true
    name: ${BENTO_SERVICE_REGISTRY_NETWORK}
