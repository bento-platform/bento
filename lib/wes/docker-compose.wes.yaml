version: '3.7'

services:
# -- base wes service
  wes:
    build:
      context: $PWD/lib/wes
      args:
        BASE_IMAGE: ${BENTOV2_WES_BASE_IMAGE}
        BASE_IMAGE_VERSION: ${BENTOV2_WES_BASE_IMAGE_VERSION}
        REPO: ${BENTO_WES_REPO}
        TAG_OR_BRANCH: ${BENTOV2_WES_TAG_OR_BRANCH}
    image: ${BENTOV2_WES_IMAGE}:${BENTOV2_WES_VERSION}
    container_name: ${BENTOV2_WES_CONTAINER_NAME}
    environment:
      - CHORD_SERVICES=/wes/chord_services.json
      - CHORD_URL=${BENTOV2_PORTAL_PUBLIC_URL_TRAILING_SLASH}
      - CELERY_RESULT_BACKEND=redis://${BENTOV2_REDIS_CONTAINER_NAME}:${BENTOV2_REDIS_INTERNAL_PORT}
      - CELERY_BROKER_URL=redis://${BENTOV2_REDIS_CONTAINER_NAME}:${BENTOV2_REDIS_INTERNAL_PORT}
      - DATABASE=/wes/data/bento_wes.db
      - SERVICE_ID=
      - SERVICE_TEMP=/wes/tmp
      - SERVICE_URL_BASE_PATH=/api/wes
      - VEP_CACHE_DIR=/wes/cache/vep
      - VEP_ENSEMBL_VERSION=105
      - WOM_TOOL_LOCATION=
      #/wes/womtool.jar
      # Allow-list (comma-separated) for hosts that workflow files can be downloaded
      # from - prevents possibly insecure WDLs from being ran
      - WORKFLOW_HOST_ALLOW_LIST=${GOHAN_API_CONTAINER_NAME}:${GOHAN_API_INTERNAL_PORT},${BENTOV2_PORTAL_DOMAIN},${BENTOV2_KATSU_CONTAINER_NAME}:${BENTOV2_KATSU_INTERNAL_PORT}

      # DRS configuration options:
      # - Where the DRS instance to use is located. Technically, if not set this
      #   defaults to using a different environment variable, NGINX_INTERNAL_SOCKET,
      #   as a path to a Bento instance's internal NGINX UNIX socket and adding a
      #   path to the actual DRS instance
      - DRS_URL=http://${BENTOV2_DRS_CONTAINER_NAME}:${BENTOV2_DRS_INTERNAL_PORT}
      - WRITE_OUTPUT_TO_DRS=True
      - DRS_DEDUPLICATE=True
      - DRS_SKIP_TYPES=
      - OTT_ENDPOINT_NAMESPACE=${BENTOV2_PORTAL_PUBLIC_URL}/api/auth/ott
      - TT_ENDPOINT_NAMESPACE=${BENTOV2_PORTAL_PUBLIC_URL}/api/auth/tt
      - FLASK_ENV=development
      - CHORD_DEBUG=True

      - INTERNAL_PORT=${BENTOV2_WES_INTERNAL_PORT}
    networks:
      - bridge-net
    expose:
      - ${BENTOV2_WES_INTERNAL_PORT}
    mem_limit: ${BENTOV2_WES_MEM_LIMIT}
    cpus: ${BENTOV2_WES_CPUS}
    cpu_shares: 1024
    healthcheck:
      test: [ "CMD", "curl", "http://localhost:${BENTOV2_WES_INTERNAL_PORT}" ]
      timeout: ${BENTOV2_HEALTHCHECK_TIMEOUT}
      interval: ${BENTOV2_HEALTHCHECK_INTERVAL}
      retries: ${BENTOV2_HEALTHCHECK_RETRIES}
    volumes:
      - ${BENTOV2_WES_VOL_DIR}:/wes/data
      - ${BENTOV2_WES_VOL_TMP_DIR}:/wes/tmp
      - ${BENTOV2_WES_VOL_CACHE_DIR}:/wes/cache
      - ${BENTOV2_WES_PROD_DROP_BOX_VOL_DIR}:/data
      # Direct mount of the DRS data volume. The rationale is to avoid duplicating
      # potentially huge genomic files using http transfers for performing some
      # processing tasks.
      - ${BENTOV2_DRS_PROD_VOL_DIR}:/drs/chord_drs/data
