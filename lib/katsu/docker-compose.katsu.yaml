services:
# -- base katsu services
  katsu:
    image: ${BENTOV2_KATSU_IMAGE}:${BENTOV2_KATSU_VERSION}
    container_name: ${BENTOV2_KATSU_CONTAINER_NAME}
    expose:
      - ${BENTOV2_KATSU_INTERNAL_PORT}
    networks:
      - drs-net
      - katsu-net
      - katsu-db-net
    depends_on:
      katsu-db:
        condition: service_healthy
    environment:
      - BENTO_UID
      - CHORD_URL=${BENTOV2_PORTAL_PUBLIC_URL}
      - CHORD_PERMISSIONS=False  # Keep off since we have the proxy handling everything for now
      - CHORD_DEBUG=False
      - CHORD_METADATA_SUB_PATH
      - INTERNAL_PORT=${BENTOV2_KATSU_INTERNAL_PORT}
      - POSTGRES_HOST=${BENTOV2_KATSU_DB_CONTAINER_NAME}
      - POSTGRES_USER=${BENTOV2_KATSU_DB_USER}
      - POSTGRES_PASSWORD=${BENTOV2_KATSU_DB_PASSWORD}
      - DRS_URL=http://${BENTOV2_DRS_CONTAINER_NAME}:${BENTOV2_DRS_INTERNAL_PORT}
      - SERVICE_TEMP=/app/tmp
      - SERVICE_SECRET_KEY=${BENTOV2_KATSU_APP_SECRET}
      - DJANGO_SETTINGS_MODULE=chord_metadata_service.metadata.settings
      - BENTOV2_PORTAL_DOMAIN
        # Allow access by container name or localhost for healthchecks:
      - KATSU_ALLOWED_HOSTS=${BENTOV2_KATSU_CONTAINER_NAME},localhost
    # configs:
    #   - source: chord-metadata-settings
    #     target: /katsu/metadata/settings.py
    #     mode: 0644
    # secrets:
    #   - source: metadata-app-secret
    #     target: metadata_app_secret
    #   - source: metadata-db-user
    #     target: metadata_db_user
    #   - source: metadata-db-secret
    #     target: metadata_db_secret
    volumes:
      # Custom Katsu config
      - ./config.json:${BENTOV2_KATSU_INTERNAL_PROJECT_DIRECTORY}/chord_metadata_service/config.json:ro
      # Temp WES dir (read only mount, since we are just pulling files from it)
      - ${BENTOV2_KATSU_PROD_WES_VOL_TMP_DIR}:/wes/tmp:ro
    mem_limit: ${BENTOV2_KATSU_MEM_LIM} # for mem_limit to work, make sure docker-compose is v2.4
    cpus: ${BENTOV2_KATSU_CPUS}
    cpu_shares: 1024
    healthcheck:
      test: [ "CMD", "curl", "http://localhost:${BENTOV2_KATSU_INTERNAL_PORT}/service-info" ]
      timeout: ${BENTOV2_HEALTHCHECK_TIMEOUT}
      interval: ${BENTOV2_HEALTHCHECK_INTERVAL}


  katsu-db:
    image: ${BENTOV2_KATSU_DB_IMAGE}:${BENTOV2_KATSU_DB_VERSION}
    container_name: ${BENTOV2_KATSU_DB_CONTAINER_NAME}
    environment:
      - POSTGRES_USER=${BENTOV2_KATSU_DB_USER}
      - POSTGRES_PASSWORD=${BENTOV2_KATSU_DB_PASSWORD}
      - POSTGRES_DB=${BENTOV2_KATSU_DB}
    expose:
      - 5432
    # secrets:
    #   - source: metadata-db-user
    #     target: metadata_db_user
    #   - source: metadata-db-secret
    #     target: metadata_db_secret
    networks:
      - katsu-db-net
    volumes:
      - ${BENTOV2_KATSU_DB_PROD_VOL_DIR}:/var/lib/postgresql/data
    mem_limit: ${BENTOV2_KATSU_DB_MEM_LIM} # for mem_limit to work, make sure docker-compose is v2.4
    cpus: ${BENTOV2_KATSU_DB_CPUS}
    cpu_shares: 1024
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "${BENTOV2_KATSU_DB}", "-U", "${BENTOV2_KATSU_DB_USER}" ]
      timeout: ${BENTOV2_HEALTHCHECK_TIMEOUT}
      interval: 15s  # Faster interval for services which others may require to be healthy

networks:
  drs-net:
    external: true
    name: ${BENTO_DRS_NETWORK}
  katsu-net:
    external: true
    name: ${BENTO_KATSU_NETWORK}
  katsu-db-net:
    external: true
    name: ${BENTO_KATSU_DB_NETWORK}
