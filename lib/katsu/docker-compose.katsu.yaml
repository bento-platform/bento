version: '3.7'

services:
# -- base katsu services
  katsu:
    build:
      args:
        BASE_IMAGE:  ${BENTOV2_KATSU_BASE_IMAGE}
        BASE_IMAGE_VERSION: ${BENTOV2_KATSU_BASE_IMAGE_VERSION}
        KATSU_REPO: ${KATSU_REPO}
        KATSU_BRANCH: ${KATSU_BRANCH}
        KATSU_TAG: ${KATSU_TAG}
        BENTOV2_PORTAL_DOMAIN: ${BENTOV2_PORTAL_DOMAIN}
        PROJECT_DIRECTORY: ${BENTOV2_KATSU_INTERNAL_PROJECT_DIRECTORY}
    image: ${BENTOV2_KATSU_IMAGE}:${BENTOV2_KATSU_VERSION}
    container_name: ${BENTOV2_KATSU_CONTAINER_NAME}
    expose:
      - ${BENTOV2_KATSU_INTERNAL_PORT}
    environment:
      - CHORD_URL=${CHORD_METADATA_HOST}
      - CHORD_PERMISSIONS="${CHORD_METADATA_AUTH}"
      - CHORD_DEBUG="${CHORD_METADATA_DEBUG}"
      - POSTGRES_HOST=${BENTOV2_KATSU_DB_CONTAINER_NAME}
      - POSTGRES_USER=${BENTOV2_KATSU_DB_USER}
      - POSTGRES_PASSWORD_FILE=/run/secrets/metadata_db_secret
      - DRS_URL=http://${BENTOV2_DRS_CONTAINER_NAME}:${BENTOV2_DRS_INTERNAL_PORT}
      - SERVICE_TEMP=/app/tmp
      - DJANGO_SETTINGS_MODULE=chord_metadata_service.metadata.settings
      - BENTOV2_PORTAL_DOMAIN=${BENTOV2_PORTAL_DOMAIN}
    configs:
      - source: chord-metadata-settings
        target: /katsu/metadata/settings.py
        mode: 0644
    secrets:
      - source: metadata-app-secret
        target: metadata_app_secret
      - source: metadata-db-user
        target: metadata_db_user
      - source: metadata-db-secret
        target: metadata_db_secret
    volumes: 
      - ../../lib/wes/tmp:/wes/tmp
    entrypoint: 
      - /bin/sh
      - -c
      - |
        python manage.py makemigrations
        python manage.py migrate
        gunicorn chord_metadata_service.metadata.wsgi:application -w 2 --threads 2 -b 0.0.0.0:${BENTOV2_KATSU_INTERNAL_PORT} 
    mem_limit: ${BENTOV2_KATSU_MEM_LIM} # for mem_limit to work, make sure docker-compose is v2.4
    cpus: ${BENTOV2_KATSU_CPUS}
    cpu_shares: 1024
    healthcheck:
      test: [ "CMD", "curl", "http://localhost:${BENTOV2_KATSU_INTERNAL_PORT}" ]
      timeout: ${BENTOV2_HEALTHCHECK_TIMEOUT}
      interval: ${BENTOV2_HEALTHCHECK_INTERVAL}
      retries: ${BENTOV2_HEALTHCHECK_RETRIES}


  katsu-db:
    image: ${BENTOV2_KATSU_DB_IMAGE}:${BENTOV2_KATSU_DB_VERSION}
    container_name: ${BENTOV2_KATSU_DB_CONTAINER_NAME}
    environment:
      - POSTGRES_USER=${BENTOV2_KATSU_DB_USER}
      - POSTGRES_PASSWORD_FILE=/run/secrets/metadata_db_secret
      - POSTGRES_DB=${BENTOV2_KATSU_DB}
    expose:
      - 5432
    secrets:
      - source: metadata-db-user
        target: metadata_db_user
      - source: metadata-db-secret
        target: metadata_db_secret
    volumes: 
      - ${BENTOV2_KATSU_DB_PROD_VOL_DIR}:/var/lib/postgresql/data
    mem_limit: ${BENTOV2_KATSU_DB_MEM_LIM} # for mem_limit to work, make sure docker-compose is v2.4
    cpus: ${BENTOV2_KATSU_DB_CPUS}
    cpu_shares: 1024
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "${BENTOV2_KATSU_DB}", "-U", "${BENTOV2_KATSU_DB_USER}" ]
      timeout: ${BENTOV2_HEALTHCHECK_TIMEOUT}
      interval: ${BENTOV2_HEALTHCHECK_INTERVAL}
      retries: ${BENTOV2_HEALTHCHECK_RETRIES}
