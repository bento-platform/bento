services:
  drs:
    image: ${BENTOV2_DRS_IMAGE}:${BENTOV2_DRS_VERSION}
    container_name: ${BENTOV2_DRS_CONTAINER_NAME}
    environment:
      - BENTO_UID
      - FLASK_DEBUG=False
      - BENTO_DRS_CONTAINER_DATA_VOLUME_DIR  # Special container-only variable to specify where the volume is mounted
      - DATABASE=${BENTO_DRS_CONTAINER_DATA_VOLUME_DIR}/db/  # slightly confused naming, folder for database to go in
      - DATA=${BENTO_DRS_CONTAINER_DATA_VOLUME_DIR}/obj/  # DRS file objects, vs. the database
      - SERVICE_BASE_URL=${BENTO_DRS_URL}
      - INTERNAL_PORT=${BENTOV2_DRS_INTERNAL_PORT}
      - DRS_INGEST_TMP_DIR=${BENTO_DRS_CONTAINER_TMP_VOLUME_DIR}  # Volume for writing possibly large temporary files to
      - CORS_ORIGINS=${BENTO_CORS_ORIGINS}
      - BENTO_AUTHZ_SERVICE_URL
      - S3_ENDPOINT=${BENTO_DRS_S3_ENDPOINT}
      - S3_USE_HTTPS=${BENTO_DRS_S3_USE_HTTPS}
      - S3_BUCKET=${BENTO_DRS_S3_BUCKET}
      - S3_REGION_NAME=${BENTO_DRS_S3_REGION_NAME}
      - S3_ACCESS_KEY=${BENTO_DRS_S3_ACCESS_KEY}
      - S3_SECRET_KEY=${BENTO_DRS_S3_SECRET_KEY}
      - S3_VALIDATE_SSL=${BENTO_DRS_VALIDATE_SSL}
      - LOG_LEVEL=${BENTO_LOG_LEVEL}
    networks:
      - drs-net
    expose:
      - ${BENTOV2_DRS_INTERNAL_PORT}
    volumes:
      - ${BENTO_DRS_DATA_VOL_DIR}:${BENTO_DRS_CONTAINER_DATA_VOLUME_DIR}
      - ${BENTO_DRS_TMP_VOL_DIR}:${BENTO_DRS_CONTAINER_TMP_VOLUME_DIR}
    mem_limit: ${BENTOV2_DRS_MEM_LIM} # for mem_limit to work, make sure docker-compose is v2.4
    cpus: ${BENTOV2_DRS_CPUS}
    cpu_shares: 512
    healthcheck:
      test: [ "CMD", "curl", "http://localhost:${BENTOV2_DRS_INTERNAL_PORT}/service-info" ]
      timeout: ${BENTO_HEALTHCHECK_TIMEOUT}
      interval: ${BENTO_HEALTHCHECK_INTERVAL}
      start_period: ${BENTO_HEALTHCHECK_START_PERIOD}
      start_interval: ${BENTO_HEALTHCHECK_START_INTERVAL}

networks:
  drs-net:
    external: true
    name: ${BENTO_DRS_NETWORK}
