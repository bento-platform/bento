version: '3.7'

secrets:
  metadata-app-secret:
    file: $PWD/tmp/secrets/metadata-app-secret
  metadata-db-user:
    file: $PWD/tmp/secrets/metadata-db-user
  metadata-db-secret:
    file: $PWD/tmp/secrets/metadata-db-secret


services:
  ingress:
    build:
      context: $PWD/lib/ingress
      args:
        BASE_IMAGE: ${BENTOV2_INGRESS_BASE_IMAGE}
        BASE_IMAGE_VERSION: ${BENTOV2_INGRESS_BASE_IMAGE_VERSION}
    image: ${BENTOV2_INGRESS_IMAGE}:${BENTOV2_INGRESS_VERSION}
    container_name: ${BENTOV2_INGRESS_CONTAINER_NAME}
    networks: 
      bridge-net:
        aliases:
          - bentov2.local
          - bentov2auth.local
    ports:
      - "80:80"
      - "443:443"


  auth:
    image: ${BENTOV2_AUTH_IMAGE}:${BENTOV2_AUTH_VERSION}
    container_name: ${BENTOV2_AUTH_CONTAINER_NAME}
    command: ["-b", "${BENTOV2_AUTH_SERVICE_HOST}", "-Dkeycloak.migration.strategy=IGNORE_EXISTING"]
    ports:
       - "${BENTOV2_AUTH_EXTERNAL_PORT}:${BENTOV2_AUTH_INTERNAL_PORT}"
    environment: 
      - KEYCLOAK_USER=${BENTOV2_AUTH_ADMIN_USER}
      - KEYCLOAK_PASSWORD=${BENTOV2_AUTH_ADMIN_PASSWORD}
    networks:
      - bridge-net
    volumes:
      - ./lib/auth/data:/opt/jboss/keycloak/standalone/data
      - ./lib/auth/data/standalone-ha.xml:/opt/jboss/keycloak/standalone/configuration/standalone-ha.xml


  web:
    build:
      context: $PWD/lib/web
      args:
        BASE_IMAGE: ${BENTOV2_WEB_BASE_IMAGE}
        BASE_IMAGE_VERSION: ${BENTOV2_WEB_BASE_IMAGE_VERSION}
        BENTO_WEB_REPO: ${BENTO_WEB_REPO}
        BENTO_WEB_BRANCH: ${BENTO_WEB_BRANCH}
    image: ${BENTOV2_WEB_IMAGE}:${BENTOV2_WEB_VERSION}
    container_name: ${BENTOV2_WEB_CONTAINER_NAME}
    networks: 
      - bridge-net
    ports:
       - "${BENTOV2_WEB_EXTERNAL_PORT}:${BENTOV2_WEB_INTERNAL_PORT}"


  katsu:
    build:
      context: $PWD/lib/katsu
      args:
        BASE_IMAGE:  ${BENTOV2_KATSU_BASE_IMAGE}
        BASE_IMAGE_VERSION: ${BENTOV2_KATSU_BASE_IMAGE_VERSION}
        KATSU_REPO: ${KATSU_REPO}
        KATSU_BRANCH: ${KATSU_BRANCH}
        KATSU_TAG: ${KATSU_TAG}
    image: ${BENTOV2_KATSU_IMAGE}:${BENTOV2_KATSU_VERSION}
    container_name: ${BENTOV2_KATSU_CONTAINER_NAME}
    ports:
      - "${BENTOV2_KATSU_EXTERNAL_PORT}:${BENTOV2_KATSU_INTERNAL_PORT}"
    networks: 
      - bridge-net
    depends_on:
      - katsu-db
    environment:
      - CHORD_URL="${CHORD_METADATA_HOST}"
      - CHORD_PERMISSIONS="${CHORD_METADATA_AUTH}"
      - CHORD_DEBUG="${CHORD_METADATA_DEBUG}"
      - POSTGRES_HOST=${BENTOV2_KATSU_DB_CONTAINER_NAME}
      - POSTGRES_USER=${BENTOV2_KATSU_DB_USER}
      - POSTGRES_PASSWORD=${BENTOV2_KATSU_DB_PASSWORD}
    configs:
      - source: chord-metadata-settings
        target: /katsu/metadata/settings.py
        mode: 0644
    secrets:
      - source: metadata-app-secret
        target: metadata_app_secret
      - source: metadata-db-user
        target: metadata_db_user
      - source: metadata-db-secret
        target: metadata_db_secret
    entrypoint:
      - /bin/sh
      - -c
      - |
        python manage.py makemigrations
        python manage.py migrate
        python manage.py runserver 0.0.0.0:${BENTOV2_KATSU_INTERNAL_PORT}


  katsu-db:
    image: ${BENTOV2_KATSU_DB_IMAGE}:${BENTOV2_KATSU_DB_VERSION}
    container_name: ${BENTOV2_KATSU_DB_CONTAINER_NAME}
    networks: 
      - bridge-net
    environment:
      - POSTGRES_USER=${BENTOV2_KATSU_DB_USER}
      - POSTGRES_PASSWORD=${BENTOV2_KATSU_DB_PASSWORD}
      #- POSTGRES_PASSWORD_FILE="/run/secrets/metadata_db_secret"
      - POSTGRES_DB=${BENTOV2_KATSU_DB}
    # ports: 
    #   - 5432
    secrets:
      - source: metadata-db-user
        target: metadata_db_user
      - source: metadata-db-secret
        target: metadata_db_secret


  drop-box:
    build:
      context: $PWD/lib/drop-box
      args:
        BASE_IMAGE: ${BENTOV2_DROP_BOX_BASE_IMAGE}
        BASE_IMAGE_VERSION: ${BENTOV2_DROP_BOX_BASE_IMAGE_VERSION}
        REPO: ${BENTO_DROP_BOX_REPO}
        BRANCH: ${BENTO_DROP_BOX_BRANCH}
        TAG: ${BENTO_DROP_BOX_TAG}
    image: ${BENTOV2_DROP_BOX_IMAGE}:${BENTOV2_DROP_BOX_VERSION}
    container_name: ${BENTOV2_DROP_BOX_CONTAINER_NAME}
    environment: 
      # Runtime
      - FLASK_DEBUG=False
      - FLASK_APP=bento_drop_box_service.app
      # Storage
      - MINIO_URL=${BENTOV2_DROP_BOX_MINIO_URL}
      - MINIO_USERNAME=${BENTOV2_DROP_BOX_MINIO_USERNAME}
      - MINIO_PASSWORD=${BENTOV2_DROP_BOX_MINIO_PASSWORD}
      - MINIO_BUCKET=${BENTOV2_DROP_BOX_MINIO_BUCKET}
    networks: 
      - bridge-net
    ports:
       - "${BENTOV2_DROP_BOX_EXTERNAL_PORT}:${BENTOV2_DROP_BOX_INTERNAL_PORT}"


  service-registry:
    build:
      context: $PWD/lib/service-registry
      args:
        BASE_IMAGE: ${BENTOV2_SERVICE_REGISTRY_BASE_IMAGE}
        BASE_IMAGE_VERSION: ${BENTOV2_SERVICE_REGISTRY_BASE_IMAGE_VERSION}
        REPO: ${BENTO_SERVICE_REGISTRY_REPO}
        BRANCH: ${BENTO_SERVICE_REGISTRY_BRANCH}
        TAG: ${BENTO_SERVICE_REGISTRY_TAG}
    image: ${BENTOV2_SERVICE_REGISTRY_IMAGE}:${BENTOV2_SERVICE_REGISTRY_VERSION}
    container_name: ${BENTOV2_SERVICE_REGISTRY_CONTAINER_NAME}
    environment: 
      # Runtime
      - FLASK_DEBUG=False
      - FLASK_APP=bento_service_registry.app

      # Following the chord_services.json schema
      # (https://github.com/c3g/chord_singularity/blob/master/chord_services.schema.json)
      # A list of services on a single domain which are registered in the service
      # registry instance.
      - CHORD_SERVICES=chord_services.json

      # Common URL base for all services
      - CHORD_URL=${BENTOV2_PUBLIC_URL}

      # Timeout, in seconds (integers only), for contacting services from the JSON
      - CONTACT_TIMEOUT=1

      # Service ID for the /service-info endpoint
      - SERVICE_ID=ca.c3g.bento:${BENTOV2_SERVICE_REGISTRY_VERSION}

      # Python path template for the services, off of the CHORD_URL value
      # Currently only supports artifact-based paths
      - URL_PATH_FORMAT=api/{artifact}
    networks: 
      - bridge-net
    ports:
       - "${BENTOV2_SERVICE_REGISTRY_EXTERNAL_PORT}:${BENTOV2_SERVICE_REGISTRY_INTERNAL_PORT}"


networks: 
  bridge-net:
    external: true